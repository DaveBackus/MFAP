\documentclass[11pt]{exam}

\oddsidemargin=0.25truein \evensidemargin=0.25truein
\topmargin=-0.5truein \textwidth=6.0truein \textheight=8.75truein

\usepackage{comment}
\usepackage[dvipdfm]{hyperref}
\urlstyle{rm}   % change fonts for url's (from Chad Jones)
\hypersetup{
    colorlinks=true,        % kills boxes
    allcolors=blue,
    pdfsubject={ECON-UB233, Macroeconomic foundations for asset pricing},
    pdfauthor={Dave Backus @ NYU},
    pdfstartview={FitH},
    pdfpagemode={UseNone},
%    pdfnewwindow=true,      % links in new window
%    linkcolor=blue,         % color of internal links
%    citecolor=blue,         % color of links to bibliography
%    filecolor=blue,         % color of file links
%    urlcolor=blue           % color of external links
% see:  http://www.tug.org/applications/hyperref/manual.html
}

%\usepackage{amssymb}
%\usepackage{amsfonts}
%\usepackage{booktabs}

\renewcommand{\thefootnote}{\fnsymbol{footnote}}
%\newcommand{\bv}{\begin{verbatim}}
%\newcommand{\ev}{\end{verbatim}}

% document starts here
\begin{document}
\parskip=\bigskipamount
\parindent=0.0in
\thispagestyle{empty}
{\large ECON-UB 233 \hfill Dave Backus @ NYU}

\bigskip\bigskip
\centerline{\Large \bf Lab Report \#0:  Matlab Practice}
\centerline{(Revised: \today)}

\bigskip
{\it This will not be collected or graded,
but please do it before the second or third class.
}

Matlab is a popular high-level computer language,
which means that it's easier to use than C++ or Java
and (far) more powerful than Excel.
It's widely used in quantitative segments of the business world,
including consulting, banking, and asset management.

What follows will get you started.  It should take you about an hour
once you have Matlab installed.

\begin{questions}
\question (accessing Matlab at NYU) You can access Matlab
in three ways at NYU:
\begin{itemize}
\item Buy a student version at the bookstore (recommended)
\item Online with NYU id:  \url{vcl.nyu.edu}
\item Online with Stern id: \url{apps.stern.nyu.edu}
\end{itemize}
I haven't used either of the online versions,
but have been told that they are sensitive to the browser you use and behave better with IE.

If you're a little braver, Octave is an open source program that's virtually identical
for basic things.  It's missing the nice GUI and the symbolic math is less user-friendly.
If you're interested, see:  \url{http://www.gnu.org/software/octave/}.

Your mission:  choose one of the above.
Once you do, start it up and type
{\tt demo} on the command line to get a demonstration of Matlab's basic
features.

\question (scalar operations) We'll start by entering commands on the command line
in what Matlab calls the Command Window.
If you can't find it, look for ``{\tt >>}'' (the ``prompt'').
\begin{parts}
\part Type each at the prompt:
\begin{verbatim}
x=7
x=7;
x
7^2
ans
\end{verbatim}
What do each of these do? What does the semi-colon do?  What if you skip it?
\part Now type these: {\tt pi}, {\tt exp(1)}, {\tt e}, {\tt x = exp(2)}, {\tt log(x)}.
What do they do?
\end{parts}

\question (vector operations)
Matlab treats everything as a vector or matrix.
What this means is that you can do a bunch of things at once rather than copying the same command
over and over again as you would in (say) Excel.  Here's an example:
\begin{parts}
\part Generate a grid with the command:  {\tt x = [-3:0.5:3]}.
What does {\tt x} look like?
\part Now compute $x^2$ for all values of $x$:
\begin{verbatim} xsquared = x.^2 \end{verbatim}
The dot means to do the operation element by element.
That way, we can compute the square for every element of $x$ with one line.
\part Plot the results this way:  {\tt plot(x,xsquared)}.
Type {\tt help plot} to learn how to control the type and color of the line.
Can you make the line red?  Dashed?
\part Plot the functions {\tt normpdf(x)} and {\tt normcdf(x)}.
(You can enter these expressions directly in the plot command.)
Use the help command to find out what these functions are ---
for example, {\tt help normpdf}.
What do you see?  How would you make the line smoother?
\end{parts}

\question (symbolic math) We'll derive the moments
of the normal distribution from its moment generating function
with Matlab doing the most of the work.
Type these commands in the command line:
%
\begin{verbatim}
syms mu sigma s
mgf = exp(mu*s + (sigma*s)^2/2)
mu1 = subs(diff(mgf,s,1),s,0)
mu2 = subs(diff(mgf,s,2),s,0)
mu4 = subs(diff(mgf,s,4),[mu sigma s],[0 1 0])
\end{verbatim}
%
What do they do?  What is {\tt mgf}?
What is {\tt diff(mgf,s,2)}?
What does {\tt subs} do?


\question (data input and scripts)
Our last task is to input data from a spreadsheet
using a ``script'':
that is, we put the commands in a file so we can run them over again without typing
everything in from scratch.
\begin{parts}
\part Enter the following data into a spreadsheet:
\begin{eqnarray*}
    \begin{array}{cc}
        x1 & x2  \\ 1 & 2 \\ 3 & 4 \\ 5 & 6
    \end{array}
\end{eqnarray*}
Save it as an Excel workbook with name (say) {\tt testdata.xls}.
Make sure you know what directory it's in.

Comments:  (i)~You can use any file name you like,
but the same name must be used in the script below.
(ii)~{\bf Warning for Mac users:}
In Windows, all Excel formats are recognized,
but Matlab for Macs does not recognize xlsx files.

\part Write a Matlab script to read the contents of the spreadsheet into Matlab:
Inside Matlab, go to the upper left corner,
click on File, and choose New and Script.
This should open the Matlab editor.
Now enter these commands: \\
\begin{verbatim}
%  (This is a comment.)
%  Practice script for data input from spreadsheet
format compact
disp('Spreadsheet input')
data = xlsread('testdata.xls')
\end{verbatim}

\bigskip
Save these commands under some appropriate file name
in the same directory as the spreadsheet.
It will automatically be given the file extension m (for Matlab).

Now run the program by clicking on the green triangle at the top of
the editor.
(An alternative is to type the file name, without the m,
on the command line.)
Then go to the Command Window to see if it works.
If not, welcome to the world of programming, where most of your time is
spent fixing bugs.
Remind yourself that patience is a virtue.
\end{parts}
\end{questions}

\vfill \centerline{\it \copyright \ \number\year \
NYU Stern School of Business}

\end{document}


EXTRA QUESTION

\question (optional)
It's not at all necessary,
but if you'd like to see Matlab put to work on some interesting math problems,
Cleve Moler (one of the founders of the Mathworks, the publisher of Matlab)
has a cool book that does just that:

\medskip
\centerline{\url{http://www.mathworks.com/moler/exm/chapters.html}}
%
I'd start with the chapters on iteration and matrices.

